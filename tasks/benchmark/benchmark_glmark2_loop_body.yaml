- block:
  - name: "Increment the retry count ({{retry_count}})"
    set_fact:
      retry_count: "{{ 0 if retry_count is undefined else retry_count | int + 1 }}"

  # Run body while error happens, do it until 10 times.
  # ======================== BODY ========================

  - name: run Xvfb Display Server
    shell: >-
      nohup Xvfb :1122 2>&1 | tee /home/root/xvfb_nohup.log &
    become: true
    async: true
    poll: 0
    when: >- 
      glmark2_benchmark_result is not undefined 
      and 'could not initialize canvas' in glmark2_benchmark_result.stderr.lower()

  ## make sure no other apps using the GPU to ensure performance,
  ## as per suggested in https://ubuntuforums.org/archive/index.php/t-2131425.html
  - name: "Restart GDM service for benchmark {{benchmark_resolution}} ({{retry_count}})"
    systemd:
      state: restarted
      name: gdm
    become: true
    register: gdm_service
    failed_when:  >- 
      gdm_service is not succeeded 
      and 'could not find the requested service' not in gdm_service.msg.lower() 
      and 'unknown state' not in gdm_service.msg.lower()
    when: restart_gdm_service

  - name: list of Glmark2 processes
    become: true
    shell: >-
      pgrep -i GLMARK | grep -v ^$$\$  | xargs ps

  - name: make sure no other instance of glmark2 is running
    become: true
    shell: >-
      pgrep -i GLMARK | grep -v ^$$\$  | xargs --no-run-if-empty kill


#  - name: "run glmark2 mini to make sure GPU is warmed-up"
#    command: "{{ prime_run }} env DISPLAY=:1122 vblank_mode=0 glmark2 -s 1x1 -b :duration=20.0"
#    become: yes
#    become_user: glmark2_benchmark
#    args:
#      chdir: "{{ phoronix_folder }}"
#    async: 3600  # Set an appropriate timeout (in seconds) for how long to wait for the command to complete
#    poll: 0      # Polling set to 0 means Ansible will not wait for the command to complete
#    register: result
#
#  - name: Pause for 10 seconds
#    wait_for:
#      timeout: 10
#      state: absent
#
#  - name: make sure glmark2 warm-up instance is running properly
#    become: true
#    command: "pgrep -i GLMARK"
#    register: pgrep_output
#  - name: "Assert glmark2 warm-up instance is running"
#    assert:
#      that:
#        - pgrep_output.stdout is defined
#        - pgrep_output.stdout != ""
#      fail_msg: "glmark2 warm-up instance is not running"

  - name: "run glmark2 benchmarking {{benchmark_resolution}} ({{retry_count}})"
    command: "{{ prime_run }} env DISPLAY=:1122 vblank_mode=0 glmark2 -s {{benchmark_resolution}} -b :duration=3.0 2>&1"
    become: yes
    become_user: glmark2_benchmark  # glmark2 should be run as non-root (a.k.a. without sudo privilege) to improve performance
    args:
      chdir: "{{ phoronix_folder }}"
    register: glmark2_benchmark_result


  - set_fact:  # replace coloring codes
      cleaned_glmark2_benchmark_result: "{{ glmark2_benchmark_result.stdout | regex_replace('\x1B\\[[0-9;]*[mK]', '') }}"

  - name: "write glmark2 benchmark stdout logs {{benchmark_resolution}}"
    delegate_to: localhost
    copy:
      content: "{{ cleaned_glmark2_benchmark_result }}"
      dest: "{{benchmark_result_folder}}/glmark2_benchmark_result_{{benchmark_resolution}}.txt"
  # ======================== END BODY ========================

  rescue:
    - fail:
        msg: Maximum retries of grouped tasks reached
      when: retry_count | int == 30
    - include_tasks: ./benchmark_glmark2_loop_body.yaml

